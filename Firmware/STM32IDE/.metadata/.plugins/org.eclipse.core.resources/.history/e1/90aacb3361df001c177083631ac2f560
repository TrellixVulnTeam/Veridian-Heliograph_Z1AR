/*
 * analogs.c
 *
 *  Created on: May 28, 2022
 *      Author: jacks
 */

#include "main.h"
#include "analogs.h"
#include <stdbool.h>

#define TS_CAL1_CAL_ADDR 	((uint16_t*)((uint32_t)0x1FF8007A))
#define TS_CAL1_TEMP		(uint16_t)(30)
#define TS_CAL2_CAL_ADDR 	((uint16_t*)((uint32_t)0x1FF8007E))
#define TS_CAL2_TEMP		(uint16_t)(130)
#define VREFINT_CAL_ADDR 	((uint16_t*)((uint32_t)0x1FF80078))
#define VREF_CAL_mV 		((uint32_t)3000)
#define adc_Channels 		2

extern ADC_HandleTypeDef hadc; //Get the handle from main

//Variables
static uint16_t ADC_raw[adc_Channels];
volatile enum ADC_State_enum ADC_state = ADC_IDLE;

//External Variables
int16_t superCapmV = 3000;
int16_t solarmV;
int16_t tempC;

//Functions
void startADC() {
	if (ADC_state == ADC_IDLE) {
		HAL_ADCEx_Calibration_Start(&hadc, ADC_SINGLE_ENDED);
		HAL_ADCEx_EnableVREFINT();
		HAL_ADCEx_EnableVREFINTTempSensor();
		HAL_ADC_Start_DMA(&hadc, &ADC_raw, adc_Channels);
		ADC_state = ADC_RUNNING;
	}
}

enum ADC_State_enum getADCState(){
	return ADC_state;
}

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
	//SCAN Forward from CHSEL0 to CHSEL18
	//solarmV = ADC_raw[0];

	superCapmV = VREF_CAL_mV * (*VREFINT_CAL_ADDR) / ADC_raw[0];

	tempC = (((TS_CAL2_TEMP - TS_CAL1_TEMP ) * (ADC_raw[1] - *TS_CAL1_CAL_ADDR)) / (*TS_CAL2_CAL_ADDR - *TS_CAL1_CAL_ADDR)) + TS_CAL1_TEMP;

	HAL_ADCEx_DisableVREFINT();
	HAL_ADCEx_DisableVREFINTTempSensor();
	ADC_state = ADC_IDLE;
}

bool vBATOK() {
	return HAL_GPIO_ReadPin(VBAT_OK_PIN_GPIO_Port, VBAT_OK_PIN_Pin);
}
